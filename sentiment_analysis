import numpy as np
from keras.datasets import imdb
from keras.preprocessing.sequence import pad_sequences
from keras.models import Sequential
from keras.layers import Embedding, LSTM, Dense
# Load the IMDB dataset
max_words = 10000  # Consider only the top 10,000 words
(x_train, y_train), (x_test, y_test) = imdb.load_data(num_words=max_words)

# Pre-process the text
max_len = 100  # Limit the length of each review to 100 words
x_train = pad_sequences(x_train, maxlen=max_len)
x_test = pad_sequences(x_test, maxlen=max_len)

# Convert the text into word embeddings
embedding_dim = 50
model = Sequential()
model.add(Embedding(input_dim=max_words, output_dim=embedding_dim))
model.add(LSTM(100))  # You can also use GRU instead of LSTM
model.add(Dense(1, activation='sigmoid'))

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(x_train, y_train, epochs=5, batch_size=32, validation_split=0.2)

# Evaluate the model
accuracy = model.evaluate(x_test, y_test)[1]
print(f"Accuracy: {accuracy}")
