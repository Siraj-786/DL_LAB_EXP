from keras.datasets import cifar10
import matplotlib.pyplot as plt
(x_train, y_train), (x_test, y_test) = cifar10.load_data()

from keras.models import Sequential
from keras.layers import Conv2D, MaxPooling2D, Flatten, Dense

model = Sequential()
model.add(Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=(32, 32, 3)))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Conv2D(64, kernel_size=(3, 3), activation='relu'))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Flatten())
model.add(Dense(128, activation='relu'))
model.add(Dense(10, activation='softmax'))  # 10 classes in CIFAR-10

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
history = model.fit(x_train, y_train, epochs=10, validation_data=(x_test, y_test))
print(model.summary())
print(model.evaluate(x_test, y_test))
print(history.history.keys())
plt.plot(history.history['accuracy'], label='accuracy')
plt.plot(history.history['val_accuracy'], label='val_accuracy')
plt.legend()
plt.show()

# kernal
model.add(Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=(32, 32, 3)))
# ...
model.add(Conv2D(64, kernel_size=(5, 5), activation='relu'))
# ...

# FEATURE MAPS
# Experiment with different numbers of feature maps in the convolutional layers
model.add(Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=(32, 32, 3)))
# ...
model.add(Conv2D(128, kernel_size=(3, 3), activation='relu'))
# ...

#stride
# Experiment with different strides in the convolutional layers
model.add(Conv2D(32, kernel_size=(3, 3), activation='relu', strides=(1, 1), input_shape=(32, 32, 3)))
# ...
model.add(Conv2D(64, kernel_size=(3, 3), activation='relu', strides=(2, 2)))
# ...

#padding
# Experiment with different padding in the convolutional layers
model.add(Conv2D(32, kernel_size=(3, 3), activation='relu', padding='valid', input_shape=(32, 32, 3)))
# ...
model.add(Conv2D(64, kernel_size=(3, 3), activation='relu', padding='same'))
# ...

